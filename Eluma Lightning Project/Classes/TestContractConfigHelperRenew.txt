@isTest
public class TestContractConfigHelperRenew {
    @isTest
    static void Method1(){
        
        Id RecordTypeId = Schema.SObjectType.Account.getRecordTypeInfosByName().get('Other').getRecordTypeId();
        Account acc= new Account(Name='TestAccount',School_Type__c='Public',Account_Status__c='Prospect');
        try{
            insert acc; 
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        Account Accresult=acc;
        
        Contract con= new contract();
        con.AccountId= Accresult.Id;
        con.StartDate=Date.newInstance(2019, 12, 8);
        con.EndDate=Date.newInstance(2019, 12, 9);
        con.OwnerExpirationNotice='15';
        con.Status='Draft';
        try{
            insert con;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        con.Status='Activated';
        try{
            Update con;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        ID conId= Con.Id;
        ContractConfigHelperRenew.getContract(Con.Id);
        ContractConfigHelperRenew.getnewQuoteLineItems(Con.Id);
    }
    
    @isTest
    static Void Method2(){
        
        Id RecordTypeId = Schema.SObjectType.Account.getRecordTypeInfosByName().get('Other').getRecordTypeId();
        Account acc= new Account(Name='TestAccount',School_Type__c='Public',Account_Status__c='Prospect');
       try{
            insert acc; 
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        Account Accresult=acc;
        
        Contract con= new contract();
        con.AccountId= Accresult.Id;
        con.StartDate=Date.newInstance(2019, 12, 8);
        con.EndDate=Date.newInstance(2019, 12, 9);
        con.OwnerExpirationNotice='15';
        con.Status='Draft';
        try{
            insert con;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        con.Status='Activated';
        try{
            Update con;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        String conId= Con.Id;
        
        Opportunity opp = new Opportunity();
        Id oppRecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByName().get('Other').getRecordTypeId();
        opp.RecordTypeId= oppRecordTypeId;
        opp.Name='Test';
        opp.AccountId= Accresult.Id;
        opp.Type='Renewal';
        opp.LeadSource='Web';
        opp.ForecastCategoryName='Pipeline';
        opp.StageName='Prospecting';
        opp.CloseDate=Date.newInstance(2019, 12, 9);
        try{
            Insert opp;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        
        Product2 prod = new Product2(Name = 'Laptop X200', 
                                     Family = 'Hardware');
       try{
            insert prod;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        Id pricebookId = Test.getStandardPricebookId();
        
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = prod.Id,
            UnitPrice = 10000, IsActive = true);
       try{
            insert standardPrice;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        Pricebook2 customPB = new Pricebook2(Name='Custom Pricebook', isActive=true);
       try{
            insert customPB;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = prod.Id,
            UnitPrice = 12000, IsActive = true);
        try{
            insert customPrice;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        Quote q= new Quote();
        q.Name= 'Test';
        q.ContractId=Con.Id;
        q.OpportunityId=opp.id;
        q.Pricebook2Id = customPB.Id;
        try{
            insert q;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        
        QuoteLineItem QlineItem = new QuoteLineItem();
        QlineItem.Product2Id= prod.Id;
        QlineItem.UnitPrice=400;
        QlineItem.Quantity=1;
        QlineItem.QuoteId=q.Id;
        QlineItem.PricebookEntryId=customPrice.id;
        try{
            insert QlineItem;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        
        set<Id> contractsetID= new set<Id>();
        for(Integer i=0;i<=10;i++){
            ContractLineItem__c conlineItem = new ContractLineItem__c();
            conlineItem.Contract__c=Con.Id;
            conlineItem.Quote_Line_Item__c=QlineItem.Id;
            conlineItem.Status__c='Active';
            insert conlineItem;
            contractsetID.add(conlineItem.Id);
        }
        ContractConfigHelperRenew.getQuoteLineItems(contractsetID);
        ContractConfigHelperRenew.getContractLineItem(Con.Id);
            
        ContractConfigHelperRenew.createOpportunites(new Map<String,String>{'Name'=>'Amendment Opportunity #','OppRecordType'=>oppRecordTypeId,'Type'=>'Amend'},con);
        ContractConfigHelperRenew.createQuote(opp, QlineItem, q);
        
    }
    @isTest
    static void testMethod4(){
        Id RecordTypeId = Schema.SObjectType.Account.getRecordTypeInfosByName().get('Other').getRecordTypeId();
        Account acc= new Account(Name='TestAccount',School_Type__c='Public',Account_Status__c='Prospect');
        try{
            insert acc; 
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        Contract con= new contract();
        con.AccountId= acc.Id;
        con.StartDate=Date.newInstance(2019, 12, 8);
        con.EndDate=Date.newInstance(2019, 12, 9);
        con.OwnerExpirationNotice='15';
        con.Status='Draft';
       try{
            insert con;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        con.Status='Activated';
        try{
            Update con;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        String conId= Con.Id;
        List<Opportunity> Opplist = new List<Opportunity>();
        for(Integer i=1;i<=10;i++){
            Opportunity opp = new Opportunity();
            Id oppRecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByName().get('Other').getRecordTypeId();
            opp.RecordTypeId= oppRecordTypeId;
            opp.Name='Test';
            opp.AccountId= acc.Id;
            opp.Type='Renewal';
            opp.LeadSource='Web';
            opp.ForecastCategoryName='Pipeline';
            opp.StageName='CLosed Won';
            opp.ContractId=con.Id;
            opp.CloseDate=Date.newInstance(2019, 12, 9);
            Opplist.add(opp);
            
        }
        try{
            Insert Opplist;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        Product2 prod = new Product2(Name = 'Laptop X200', 
                                     Family = 'Hardware');
         try{
            insert prod;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        Id pricebookId = Test.getStandardPricebookId();
        
        PricebookEntry standardPrice = new PricebookEntry(
            Pricebook2Id = pricebookId, Product2Id = prod.Id,
            UnitPrice = 10000, IsActive = true);
        try{
            insert standardPrice;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        Pricebook2 customPB = new Pricebook2(Name='Custom Pricebook', isActive=true);
       try{
            insert customPB;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        PricebookEntry customPrice = new PricebookEntry(
            Pricebook2Id = customPB.Id, Product2Id = prod.Id,
            UnitPrice = 12000, IsActive = true);
        try{
            insert customPrice;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        List<Quote> QuoteList= new List<Quote>();
        for(opportunity opp :Opplist){
            Quote q= new Quote();
            q.Name= 'Test'+opp.Name;
            q.ContractId=Con.Id;
            q.OpportunityId=opp.id;
            q.Pricebook2Id = customPB.Id;
            QuoteList.add(q);
            
        }
       try{
            insert QuoteList;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        List<QuoteLineItem> QuoteLineItemList= new List<QuoteLineItem>();
        for(Quote q:QuoteList ){
            QuoteLineItem QlineItem = new QuoteLineItem();
            QlineItem.Product2Id= prod.Id;
            QlineItem.UnitPrice=400;
            QlineItem.Quantity=1;
            QlineItem.QuoteId=q.Id;
            QlineItem.PricebookEntryId=customPrice.id;
            QuoteLineItemList.add(QlineItem);
            
        }
        try{
            insert QuoteLineItemList;
        }catch(Exception ex){
            system.debug('Exception occourred: '+ex.getMessage()+' at '+ex.getLineNumber());
            
        }
        
        
        ContractConfigHelperRenew.synchQuotes(oppList, QuoteList);
        ContractConfigHelperRenew.createContractLineItems(oppList);
        
    }
}